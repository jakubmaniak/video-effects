{"version":3,"sources":["presets/index.js","components/Preset.js","components/PresetList.js","components/PresetEditor.js","components/PresetManager.js","presets/_new.js","components/VideoSource.js","components/VideoSourceList.js","components/VideoPreview.js","components/VideoManager.js","App.js","reportWebVitals.js","index.js"],"names":["Promise","all","Preset","props","className","selected","onClick","name","PresetList","listRef","useRef","useEffect","current","scrollTop","scrollHeight","presets","ref","map","preset","selectedPreset","onSelectPreset","handleItemClick","id","PresetEditor","useState","currentPreset","setCurrentPreset","code","setCode","height","language","onMount","editor","monaco","lib","join","languages","typescript","javascriptDefaults","setCompilerOptions","target","ScriptTarget","ES2019","allowNonTsExtensions","addExtraLib","createModel","Uri","parse","loading","options","minimap","enabled","value","onChange","onCodeChange","PresetManager","Set","setPresets","_setSelectedPreset","hasChanges","setHasChanges","setSelectedPreset","setManipulatorCode","onManipulatorChange","Function","predefinedPresets","then","presetModules","presetModule","uuid","trim","values","next","newPreset","add","disabled","VideoSource","address","maxLength","setSelected","source","length","slice","VideoSourceList","videoSources","videoSource","selectedVideoSource","onSelectVideoSource","VideoPreview","canvasRef","videoRef","manipulatorRef","playing","setPlaying","muted","setMuted","video","document","createElement","crossOrigin","loop","ctx","getContext","srcCanvas","width","srcCtx","setInterval","drawImage","frame","getImageData","frameCopies","redrawImageData","x","y","copy","img","index","r","data","g","b","a","createImageData","set","Uint8ClampedArray","push","putImageData","src","play","manipulator","pause","VideoManager","setVideoSources","setSelectedVideoSource","setManipulator","App","reportWebVitals","onPerfEntry","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.e433b734.chunk.js","sourcesContent":["export default Promise.all([\r\n    import('./_default'),\r\n    import('./grayscale'),\r\n    import('./sepia'),\r\n    import('./daylight'),\r\n    import('./infrared-vision'),\r\n    import('./noctovision'),\r\n    import('./binoculars'),\r\n    import('./red-turquoise')\r\n]);","import '../styles/Preset.css';\r\n\r\nfunction Preset(props) {\r\n    function getItemClassName() {\r\n        return 'preset' + (\r\n            props.selected ? ' preset--selected' : ''\r\n        );\r\n    }\r\n\r\n    return (\r\n        <button className={getItemClassName()} onClick={props.onClick}>{props.name}</button>\r\n    );\r\n}\r\n\r\nexport default Preset;","import { useEffect, useRef } from 'react';\r\nimport '../styles/PresetList.css';\r\nimport Preset from './Preset';\r\n\r\nfunction PresetList(props) {\r\n    let listRef = useRef();\r\n\r\n    useEffect(() => {\r\n        listRef.current.scrollTop = listRef.current.scrollHeight;\r\n    }, [props.presets]);\r\n\r\n    function handleItemClick(preset) {\r\n        if (preset !== props.selectedPreset) {\r\n            props.onSelectPreset?.(preset);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"preset__list\" ref={listRef}>{\r\n            [...props.presets].map((preset) =>\r\n                <Preset\r\n                    key={preset.id}\r\n                    name={preset.name}\r\n                    selected={preset === props.selectedPreset}\r\n                    onClick={() => handleItemClick(preset)}\r\n                />\r\n            )\r\n        }</div>\r\n    );\r\n}\r\n\r\nexport default PresetList;","import '../styles/PresetEditor.css';\r\nimport { useEffect, useState } from 'react';\r\nimport Editor from '@monaco-editor/react';\r\n\r\nfunction PresetEditor(props) {\r\n    let [currentPreset, setCurrentPreset] = useState();\r\n    let [code, setCode] = useState('');\r\n\r\n    useEffect(() => {\r\n        setCode(props.preset?.code);\r\n    }, [props.preset]);\r\n\r\n    function handleCodeChange(value) {\r\n        if (currentPreset !== props.preset) {\r\n            setCurrentPreset(props.preset);\r\n        }\r\n        else {\r\n            props.onCodeChange?.(value);\r\n        }\r\n    }\r\n\r\n    function handleEditorMount(editor, monaco) {\r\n        let lib = [\r\n            'declare const width: number;',\r\n            'declare const height: number;',\r\n            'declare type Color = { r: number, g: number, b: number, a: number };',\r\n            'declare function get(x: number, y: number, copy: number = null): Color;',\r\n            'declare function set(x: number, y: number, color: Partial<Color> = {}, copy: number = null): void;',\r\n            'declare function copyFrame(): number;',\r\n            'declare function apply(copy: number = null): void;'\r\n        ].join('\\n\\n');\r\n\r\n        monaco.languages.typescript.javascriptDefaults.setCompilerOptions({\r\n            target: monaco.languages.typescript.ScriptTarget.ES2019,\r\n            lib: ['es2019'],\r\n            allowNonTsExtensions: true\r\n        });\r\n\r\n        monaco.languages.typescript.javascriptDefaults.addExtraLib(lib, 'ts:filename/sandbox.d.ts');\r\n        monaco.editor.createModel(lib, 'typescript', monaco.Uri.parse('ts:filename/sandbox.d.ts'));\r\n    }\r\n\r\n    return (\r\n        <Editor\r\n            height=\"360px\"\r\n            language=\"javascript\"\r\n            onMount={handleEditorMount}\r\n            loading=\"Loading preset editor...\"\r\n            options={{\r\n                minimap: { enabled: false }\r\n            }}\r\n            value={code}\r\n            onChange={handleCodeChange}\r\n        />\r\n    );\r\n}\r\n\r\nexport default PresetEditor;","import { useEffect, useState } from 'react';\r\nimport { v4 as uuid } from 'uuid';\r\nimport predefinedPresets from '../presets';\r\nimport { name as newPresetName, code as newPresetCode } from '../presets/_new';\r\nimport PresetList from './PresetList';\r\nimport PresetEditor from './PresetEditor';\r\n\r\nfunction PresetManager(props) {\r\n    let [presets, setPresets] = useState(new Set());\r\n    let [selectedPreset, _setSelectedPreset] = useState();\r\n    let [code, setCode] = useState('');\r\n    let [hasChanges, setHasChanges] = useState(false);\r\n\r\n    function setSelectedPreset(preset) {\r\n        _setSelectedPreset(preset);\r\n        setCode(preset.code);\r\n        setManipulatorCode(preset.code);\r\n        setHasChanges(false);\r\n    }\r\n\r\n    useEffect(() => {\r\n        predefinedPresets.then((presetModules) => {\r\n            presets = new Set(\r\n                presetModules.map((presetModule) => ({\r\n                    id: uuid(),\r\n                    name: presetModule.name,\r\n                    code: presetModule.code.trim()\r\n                }))\r\n            );\r\n            setPresets(presets);\r\n            setSelectedPreset(presets.values().next().value);\r\n        });\r\n    }, []);\r\n\r\n    function addNewPreset() {\r\n        let newPreset = {\r\n            id: uuid(),\r\n            name: newPresetName,\r\n            code: newPresetCode.trim()\r\n        };\r\n        presets.add(newPreset);\r\n\r\n        setPresets(new Set(presets));\r\n        setSelectedPreset(newPreset);\r\n    }\r\n\r\n    function saveCodeChanges() {\r\n        selectedPreset.code = code;\r\n        setPresets(new Set(presets));\r\n        setManipulatorCode(code);\r\n        setHasChanges(false);\r\n    }\r\n\r\n    function setManipulatorCode(code) {\r\n        props.onManipulatorChange?.(() => new Function('width', 'height', 'fps', 'get', 'set', 'copyFrame', 'apply', code));\r\n    }\r\n\r\n    return <>\r\n        <section className=\"app-section\">\r\n            <header>\r\n                <h1 className=\"app-section__title\">Presets</h1>\r\n                <button onClick={addNewPreset}>Add new preset</button>\r\n            </header>\r\n            <div className=\"presets\">\r\n                <PresetList\r\n                    presets={presets}\r\n                    selectedPreset={selectedPreset}\r\n                    onSelectPreset={setSelectedPreset}\r\n                />\r\n            </div>\r\n        </section>\r\n        <section className=\"app-section\">\r\n            <header>\r\n                <h1 className=\"app-section__title\">Preset editor</h1>\r\n                <button\r\n                    onClick={saveCodeChanges}\r\n                    disabled={!hasChanges}\r\n                >Save changes</button>\r\n            </header>\r\n            <div className=\"preset-editor\">\r\n                <PresetEditor\r\n                    preset={selectedPreset}\r\n                    onCodeChange={(code) => { setCode(code); setHasChanges(true); }}\r\n                />\r\n            </div>\r\n        </section>\r\n    </>;\r\n}\r\n\r\nexport default PresetManager;","export const name = 'My preset';\r\nexport const code =\r\n`\r\nfor (let y = 0; y < height; y++) {\r\n    for (let x = 0; x < width; x++) {\r\n        let {r, g, b} = get(x, y);\r\n        \r\n        set(x, y, {r, g, b});\r\n    }\r\n}\r\n`;","import '../styles/VideoSource.css';\r\nimport { useEffect, useState } from 'react';\r\n\r\nfunction VideoSource(props) {\r\n    let [selected, setSelected] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (!props.selected === selected) {\r\n            setSelected(!!props.selected);\r\n        }\r\n    }, [props.selected]);\r\n\r\n    function sliceSource(address, maxLength) {\r\n        if (address.length > maxLength) {\r\n            return '...' + address.slice(-maxLength + 3);\r\n        }\r\n\r\n        return address;\r\n    }\r\n\r\n    function getItemClassName() {\r\n        return 'video-source' + (\r\n            selected ? ' video-source--selected' : ''\r\n        );\r\n    }\r\n\r\n    return (\r\n        <button className={getItemClassName()} onClick={props.onClick}>\r\n            <span className=\"video-source__name\">{props.name ?? 'Video source'}</span>\r\n            <span className=\"video-source__address\">{sliceSource(props.source ?? '', 40)}</span>\r\n        </button>\r\n    );\r\n}\r\n\r\nexport default VideoSource;","import '../styles/VideoSourceList.css';\r\nimport VideoSource from './VideoSource';\r\n\r\nfunction VideoSourceList(props) {\r\n    return (\r\n        <div className=\"video-source__list\">{\r\n            [...props.videoSources].map((videoSource) =>\r\n                <VideoSource\r\n                    key={videoSource.id}\r\n                    selected={videoSource === props.selectedVideoSource}\r\n                    onClick={() => props.onSelectVideoSource?.(videoSource)}\r\n                    {...videoSource}/>\r\n            )\r\n        }</div>\r\n    );\r\n}\r\n\r\nexport default VideoSourceList;","import '../styles/VideoPreview.css';\r\nimport { useEffect, useRef, useState } from 'react';\r\n\r\nfunction VideoPreview(props) {\r\n    let canvasRef = useRef();\r\n    let videoRef = useRef();\r\n    let manipulatorRef = useRef();\r\n    let [playing, setPlaying] = useState(true);\r\n    let [muted, setMuted] = useState(true);\r\n\r\n    useEffect(() => {\r\n        let video = document.createElement('video');\r\n        video.crossOrigin = 'anonymous';\r\n        video.muted = true;\r\n        video.loop = true;\r\n\r\n        videoRef.current = video;\r\n\r\n        let ctx = canvasRef.current.getContext('2d');\r\n        \r\n        let srcCanvas = document.createElement('canvas');\r\n        srcCanvas.width = 640;\r\n        srcCanvas.height = 360;\r\n        let srcCtx = srcCanvas.getContext('2d');\r\n\r\n        setInterval(() => {\r\n            srcCtx.drawImage(video, 0, 0, 640, 360);\r\n\r\n            let frame = srcCtx.getImageData(0, 0, 640, 360);\r\n            let frameCopies = [];\r\n            let redrawImageData = frame;\r\n\r\n            let fps = function() { };\r\n            let copyFrame = () => {\r\n                let copy = ctx.createImageData(frame.width, frame.height);\r\n                copy.data.set(new Uint8ClampedArray(frame.data));\r\n                return frameCopies.push(copy) - 1;\r\n            };\r\n            let apply = (copy = null) => {\r\n                redrawImageData = (copy !== null ? frameCopies[copy] : frame);\r\n            };\r\n            let get = (x, y, copy = null) => {\r\n                let img = (copy !== null ? frameCopies[copy] : frame);\r\n                let index = (img.width * y + x) * 4;\r\n                return {\r\n                    r: img.data[index],\r\n                    g: img.data[index + 1],\r\n                    b: img.data[index + 2],\r\n                    a: img.data[index + 3]\r\n                };\r\n            };\r\n            let set = (x, y, { r = null, g = null, b = null, a = null }, copy = null) => {\r\n                let img = (copy !== null ? frameCopies[copy] : frame);\r\n                let index = (img.width * y + x) * 4;\r\n                (r != null) && (img.data[index] = r);\r\n                (g != null) && (img.data[index + 1] = g);\r\n                (b != null) && (img.data[index + 2] = b);\r\n                (a != null) && (img.data[index + 3] = a);\r\n            };\r\n            \r\n            manipulatorRef.current?.(frame.width, frame.height, fps, get, set, copyFrame, apply);\r\n\r\n            ctx.putImageData(redrawImageData, 0, 0);\r\n        }, 1000 / 24);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        videoRef.current.src = props.videoSource?.source;\r\n        videoRef.current.play();\r\n    }, [props.videoSource]);\r\n\r\n    useEffect(() => {\r\n        manipulatorRef.current = props.manipulator;\r\n    }, [props.manipulator]);\r\n\r\n    function handlePlayButtonClick() {\r\n        if (playing) {\r\n            videoRef.current.pause();\r\n        }\r\n        else {\r\n            videoRef.current.play();\r\n        }\r\n        setPlaying(!playing);\r\n    }\r\n\r\n    function handleMuteButtonClick() {\r\n        videoRef.current.muted = !muted;\r\n        setMuted(!muted);\r\n    }\r\n\r\n    return (\r\n        <div className=\"video-preview__container\">\r\n            <canvas className=\"video-preview__canvas\" width=\"640\" height=\"360\" ref={canvasRef}></canvas>\r\n            <div className=\"video-controls\">\r\n                <button\r\n                    className={playing ? 'video-control--pause' : 'video-control--play'}\r\n                    onClick={handlePlayButtonClick}\r\n                ></button>\r\n                <button\r\n                    className={muted ? 'video-control--volume-mute' : 'video-control--volume-medium'}\r\n                    onClick={handleMuteButtonClick}\r\n                ></button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default VideoPreview;","import { useEffect, useState } from 'react';\r\nimport { v4 as uuid } from 'uuid';\r\nimport VideoSourceList from './VideoSourceList';\r\nimport VideoPreview from './VideoPreview';\r\n\r\nfunction VideoManager(props) {\r\n    let [videoSources, setVideoSources] = useState(new Set());\r\n    let [selectedVideoSource, setSelectedVideoSource] = useState();\r\n    let [manipulator, setManipulator] = useState();\r\n\r\n    useEffect(() => {\r\n        videoSources = new Set([\r\n            {\r\n                id: uuid(),\r\n                name: 'Big Buck Bunny',\r\n                source: 'https://commondatastorage.googleapis.com/gtv-videos-bucket/sample/BigBuckBunny.mp4'\r\n            },\r\n            {\r\n                id: uuid(),\r\n                name: 'Tears of Steel',\r\n                source: 'http://commondatastorage.googleapis.com/gtv-videos-bucket/sample/TearsOfSteel.mp4'\r\n            },\r\n            {\r\n                id: uuid(),\r\n                name: 'Snow Slowly Falling Down',\r\n                source: '/videos/SnowSlowlyFallingDown.mp4'\r\n            }\r\n        ]);\r\n        setVideoSources(videoSources);\r\n\r\n        setSelectedVideoSource(videoSources.values().next().value);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        setManipulator(() => props.manipulator);\r\n    }, [props.manipulator]);\r\n\r\n    function handleVideoSourceChange(videoSource) {\r\n        if (selectedVideoSource === videoSource) {\r\n            return;\r\n        }\r\n\r\n        setSelectedVideoSource(videoSource);\r\n    }\r\n\r\n    return <>\r\n        <section className=\"app-section\">\r\n            <header>\r\n                <h1 className=\"app-section__title\">Video sources</h1>\r\n            </header>\r\n            <div className=\"video-sources\">\r\n                <VideoSourceList\r\n                    videoSources={videoSources}\r\n                    selectedVideoSource={selectedVideoSource}\r\n                    onSelectVideoSource={handleVideoSourceChange}\r\n                />\r\n            </div>\r\n        </section>\r\n        <section className=\"app-section\">\r\n            <header>\r\n                <h1 className=\"app-section__title\">Video preview</h1>\r\n            </header>\r\n            <div className=\"video-preview\">\r\n                <VideoPreview\r\n                    videoSource={selectedVideoSource}\r\n                    manipulator={manipulator}\r\n                />\r\n            </div>\r\n        </section>\r\n    </>;\r\n}\r\n\r\nexport default VideoManager;","import './App.css';\r\nimport { useState } from 'react';\r\nimport PresetManager from './components/PresetManager';\r\nimport VideoManager from './components/VideoManager';\r\n\r\nfunction App() {\r\n  let [manipulator, setManipulator] = useState();\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <div className=\"app__column\">\r\n        <VideoManager manipulator={manipulator}/>\r\n      </div>\r\n      <div className=\"app__column\">\r\n        <PresetManager onManipulatorChange={setManipulator}/>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}